package com.itheima.demo20总结;

/*
多态的概念: 一类事物的多种形态
    H2O:
        水
        冰
        水蒸气

能够写出多态的格式
    1. 父类 变量名 = new 子类();
    2. 接口 变量名 = new 实现类();

能够说出多态的前提
    1.要有继承/实现关系
    2.方法重写

能够理解多态向上转型和向下转型
    向上转型: 把子类转成父类(多态)
    父类 变量 = new 子类();

    向下转型: 把父类转成子类
    子类 变量 = (子类)父类变量;

    向下转型的好处: 可以使用子类的特有方法
    在向下转型前使用 instanceof关键字 做判断,更安全

能够说出内部类概念
    把一个类定义到另一个类的里面(类中类)

能够理解匿名内部类的编写格式
    接口 变量名 = new 接口() {
        方法重写
    };

能够说出Object类的特点
    Object类是所有类的父类(祖宗),所有的类都是直接或间接的实现了Object类

能够重写Object类的toString方法
    Object类中的toString() 返回对象名@地址, 我们不想打印对象地址,想打印对象内容,就重写toString()返回对象的内容

    快捷键: alt + insert -> toString();
 */
public class Demo20 {
}
